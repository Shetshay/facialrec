services:
  frontend:
    image: frontend:latest # Replace with your frontend image
    build:
      context: ./Website
    ports:
      - "8000:8000"
    volumes:
      - ./Website:/frontend
    networks:
      - app-network

  backend:
    image: backend:latest # Replace with your backend image
    build:
      context: ./goDatabase
    environment:
      DATABASE_URL: postgres://${DB_USERNAME}:${DB_PASSWORD}@psql:5432/${DB_DATABASE}
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: your-bucket-name # Replace with your bucket name
    ports:
      - "3000:3000"
    volumes:
      - ./goDatabase:/backend
    depends_on:
      - psql
      - minio
    networks:
      - app-network

  psql:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - psql_volume:/var/lib/postgresql/data
      - ./goDatabase/sql/mainTables.sql:/docker-entrypoint-initdb.d/mainTables.sql
    networks:
      - app-network

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    networks:
      - app-network

  pythonserver:
    image: pythonserver:latest
    build:
      context: ./pythonFacialRec
    ports:
      - "4269:4269"
    volumes:
      - ./pythonFacialRec:/pythonserver
    depends_on:
      - backend
      - frontend
    networks:
      - app-network

volumes:
  psql_volume:
  minio_data:

networks:
  app-network:
